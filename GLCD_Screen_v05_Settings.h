// #############################################################################
//
// Название     : CLCD_Screen_Settings_v05, файл настроек.
// Назначение   : Библиотека для работы с графическим 64х128 LCD (WDG0151 или аналогами)
// Платформа    : Отладочная плата EasyPIC 6
// Зависимости  : Функции Delay_us(), Delay_ms() среды microC PRO for PIC
//                Библиотеки mikroE FLASH и mikroE C_Math среды microC PRO for PIC
//                Основной файл библиотеки CLGD_Screen_v04.h
//
// Автор        : Цурко А.В. (Ratgor), Ращинский П.Н.
// Рефакторинг        : А.В. Цурко (Ratgor) [не проводился]
//
// #############################################################################
//
// Описание:
//
//          Модуль представляет собой _библиотеку_,
//          позволяющую рисовать точки, фигуры и текст на графическом жк-дисплее
//
//          Содержание модуля:
//          1) Рисование точки по координатам
//          2) Рисование байта (8 соседних по вертикали точек) по координатам
//          3) Рисование символа (латиница, кириллица, цифры, знаки препинания)
//          4) Рисование строки символов
//          5) рисование прямой линии
//          6) Прямоугольник пустой
//          7) Прямоугольник заполненый
//          8) Круг пустой
//          9) Круг заполненный
//          10) Пустой экран
//          11) Заполненный экран
//          12) Горизонтальный сдвиг экрана
//          13) Преобразование числа в символ (дополнительная функция)
//          14) Задержка в тактах (функция для организации внутренних задержек)
//
// Примечания:
//
//          1) Является упрощенной (без сенсорной панели)
//             и портированной (AVR -> PIC) версией из другого проекта
//          2) Функции рисования фигур не тестировались после портирования,
//             просто подобраны аналоги из C_Math библиотеки
//          3) Версия 0.3 обновлена до 0.4 после оптимизации функции рисования
//             линии. Версия 0.4 -> 0.3с содержала урезанный набор символов
//          4) Версия 0.4 обновлена до 0.5 после добавления функции сдвига
//             экрана. Версия 0.5 -> 0.4с содержала урезанный набор символов
//
// #############################################################################
//
// -----------------------------------------------------------------------------
// Функция рисования пикселя:
// -----------------------------------------------------------------------------
// void GLCD_Draw_Pixel (unsigned char X_pos, unsigned char Y_pos, unsigned char color)
// Параметры функции:
// Координата по x (слева направо: 0-127)
// Координата по y (сверху вниз: 0-63)
// Цвет пикселя: 0-черный, 1-белый, 2-инвертировать
// Функция возвращает ничего.
//
// -----------------------------------------------------------------------------
// Функция рисования байта (на дисплее по y: 8 строк по 8 пикселей):
// -----------------------------------------------------------------------------
// void GLCD_Draw_Byte (unsigned char X_pos, unsigned char Y_pos, unsigned char data_byte, unsigned char color)
// Параметры функции:
// Координата по x (слева направо: 0-127)
// Координата по y, номер строки (сверху вниз: 0-7)
// Маска заливки, прямой цвет применяется для логических '1', обратный для логических '0'
// Цвет пикселя: 0-черный, 1-белый, 2-инвертировать
// Функция возвращает ничего.
//
// -----------------------------------------------------------------------------
// Функция рисования символа (8 строк по 18 символов):
// -----------------------------------------------------------------------------
// void GLCD_Draw_Char (unsigned char X_pos, unsigned char Y_pos, unsigned char data_char, unsigned char color)
// Параметры функции:
// Координата по x (слева направо: 0-127)
// Координата по y, номер строки (сверху вниз: 0-7)
// Рисуемый символ 5x7 в ячейке 7x8, поддерживаются: A-z, А-я, 0-9, .,!?:;" и т.д.
// Цвет пикселя: 0-черный, 1-белый
// Функция возвращает ничего.
//
// -----------------------------------------------------------------------------
// Функция рисования строки (8 строк по 18 символов):
// -----------------------------------------------------------------------------
// void GLCD_Draw_String (unsigned char X_pos, unsigned char Y_pos, char *data_string, unsigned char color)
// Параметры функции:
// Координата по x (слева направо: 0-127)
// Координата по y, номер строки (сверху вниз: 0-7)
// Рисуемая строка символов, указатель на первый элемент тесктового массива длинной до 255 символов (символы - см. выше)
// Цвет пикселя: 0-черный, 1-белый
// Функция возвращает ничего.
//
// -----------------------------------------------------------------------------
// Функция рисования линии:
// -----------------------------------------------------------------------------
// void GLCD_Draw_Line(unsigned char X0_pos, unsigned char Y0_pos, unsigned char X1_pos,unsigned char Y1_pos, unsigned char coolor)                         
// Параметры функции:
// Координата первой точки по x (слева направо: 0-127)
// Координата первой точки по y (сверху вниз: 0-63)
// Координата второй точки по x (слева направо: 0-127)
// Координата второй точки по y (сверху вниз: 0-63)
// Цвет пикселя: 0-черный, 1-белый, 2-инвертировать
// Функция возвращает ничего.
//
// -----------------------------------------------------------------------------
// Функция рисования пустого прямоугольника:
// -----------------------------------------------------------------------------
// void Glcd_Draw_Rectangle(unsigned char X0_pos, unsigned char Y0_pos, unsigned char X1_pos, unsigned char Y1_pos, unsigned char coolor)
// Параметры функции:
// Координата верхнего левого угла по x (слева направо: 0-127)
// Координата верхнего левого угла по y (сверху вниз: 0-63)
// Координата нижнего правого угла по x (слева направо: 0-127)
// Координата нижнего правого угла по y (сверху вниз: 0-63)
// Цвет пикселя: 0-черный, 1-белый, 2-инвертировать
// Функция возвращает ничего.
//
// -----------------------------------------------------------------------------
// Функция рисования заполненного прямоугольника:
// -----------------------------------------------------------------------------
// void Glcd_Draw_Rectangle_Fill(unsigned char X0_pos, unsigned char Y0_pos, unsigned char X1_pos, unsigned char Y1_pos, unsigned char coolor)
// Параметры функции:
// Координата верхнего левого угла по x (слева направо: 0-127)
// Координата верхнего левого угла по y (сверху вниз: 0-63)
// Координата нижнего правого угла по x (слева направо: 0-127)
// Координата нижнего правого угла по y (сверху вниз: 0-63)
// Цвет пикселя: 0-черный, 1-белый, 2-инвертировать
// Функция возвращает ничего.
//
// -----------------------------------------------------------------------------
// Функция рисования пустой окружности:
// -----------------------------------------------------------------------------
// void Glcd_Draw_Circle(unsigned char X0_pos, unsigned char Y0_pos, unsigned char Radius, unsigned char coolor)
// Параметры функции:
// Координата центра окружности по x (слева направо: 0-127)
// Координата центра окружности по y (сверху вниз: 0-63)
// Кадиус окружности (не должен привышать координату центра по x)
// Цвет пикселя: 0-черный, 1-белый, 2-инвертировать
// Функция возвращает ничего.
//
// -----------------------------------------------------------------------------
// Функция рисования заполненной окружности:
// -----------------------------------------------------------------------------
// void Glcd_Draw_Circle_Fill(unsigned char X0_pos, unsigned char Y0_pos, unsigned char Radius, unsigned char coolor)
// Параметры функции:
// Координата центра окружности по x (слева направо: 0-127)
// Координата центра окружности по y (сверху вниз: 0-63)
// Кадиус окружности (не должен привышать координату центра по x)
// Цвет пикселя: 0-черный, 1-белый, 2-инвертировать
// Функция возвращает ничего.
//
// -----------------------------------------------------------------------------
// Функция очистки экрана (рисование черного экрана):
// -----------------------------------------------------------------------------
// void GLCD_Clear()
// Параметры функции:
// Нет параметров.
// Цвет пикселя: 0-черный, 1-белый, 2-инвертировать
// Функция возвращает ничего.
//
// -----------------------------------------------------------------------------
// Функция очистки экрана (рисование белого экрана):
// -----------------------------------------------------------------------------
// void GLCD_Fill()
// Параметры функции:
// Нет параметров.
// Цвет пикселя: 0-черный, 1-белый, 2-инвертировать
// Функция возвращает ничего.
//
// -----------------------------------------------------------------------------
// Функция сдвига экрана:
// -----------------------------------------------------------------------------
// void GLCD_Move_Screen (signed char step)
// Параметры функции:
// step: шаг, на который будет сдвинут экран вправо, в пикселях (-128..127)
// Функция возвращает ничего.
//
// -----------------------------------------------------------------------------
// Функция преобразования числа в символ:
// -----------------------------------------------------------------------------
// unsigned char numPosCode (unsigned char number, unsigned char position, unsigned char radix)
// Параметры функции:
// Число для преобразования (беззнаковое: 0-255)
// Позиция преобразуемой цифоры в числе (0-max, зависит от системы счисления)
// Система счисления (например: 10-десятичная, 16-шестнадцатеричная)
// Функция возвращает ASCII код цифры в числе на определённой позиции.
//
// -----------------------------------------------------------------------------
// Функция задержки в выполняемой программе:
// -----------------------------------------------------------------------------
// void wait(int tact)
// Параметры функции:
// Количиство тактов задержки (0-65535)
// Функция возвращает ничего.
//
// #############################################################################



/*##############################################################*/
/* begin of TUNEABLE part of the library                        */
/*##############################################################*/

#define GLCD_PORT_D7    PORTD    // порт для установки одного бита данных
#define GLCD_PORT_D6    PORTD
#define GLCD_PORT_D5    PORTD
#define GLCD_PORT_D4    PORTD
#define GLCD_PORT_D3    PORTD
#define GLCD_PORT_D2    PORTD
#define GLCD_PORT_D1    PORTD
#define GLCD_PORT_D0    PORTD
#define GLCD_PORT_CS1   PORTB    // порт для чтения одного бита управления
#define GLCD_PORT_CS2   PORTB
#define GLCD_PORT_RS    PORTB
#define GLCD_PORT_RW    PORTB
#define GLCD_PORT_E     PORTB
#define GLCD_PORT_RST   PORTB

#define GLCD_DDR_D7     TRISD    // настройка направления порта одного бита данных
#define GLCD_DDR_D6     TRISD
#define GLCD_DDR_D5     TRISD
#define GLCD_DDR_D4     TRISD
#define GLCD_DDR_D3     TRISD
#define GLCD_DDR_D2     TRISD
#define GLCD_DDR_D1     TRISD
#define GLCD_DDR_D0     TRISD
#define GLCD_DDR_CS1    TRISB    // настройка направления порта одного бита управления
#define GLCD_DDR_CS2    TRISB
#define GLCD_DDR_RS     TRISB
#define GLCD_DDR_RW     TRISB
#define GLCD_DDR_E      TRISB
#define GLCD_DDR_RST    TRISB

#define GLCD_PIN_D7     PORTD    // порт для установки одного бита данных
#define GLCD_PIN_D6     PORTD
#define GLCD_PIN_D5     PORTD
#define GLCD_PIN_D4     PORTD
#define GLCD_PIN_D3     PORTD
#define GLCD_PIN_D2     PORTD
#define GLCD_PIN_D1     PORTD
#define GLCD_PIN_D0     PORTD
#define GLCD_PIN_CS1    PORTB    // порт для чтения одного бита управления
#define GLCD_PIN_CS2    PORTB
#define GLCD_PIN_RS     PORTB
#define GLCD_PIN_RW     PORTB
#define GLCD_PIN_E      PORTB
#define GLCD_PIN_RST    PORTB

#define GLCD_BIT_D7     7        // позиция одного бита данных в соответствуещём порту
#define GLCD_BIT_D6     6
#define GLCD_BIT_D5     5
#define GLCD_BIT_D4     4
#define GLCD_BIT_D3     3
#define GLCD_BIT_D2     2
#define GLCD_BIT_D1     1
#define GLCD_BIT_D0     0
#define GLCD_BIT_CS1    0        // позиция одного бита управления в соответствуещём порту
#define GLCD_BIT_CS2    1
#define GLCD_BIT_RS     2
#define GLCD_BIT_RW     3
#define GLCD_BIT_E      4
#define GLCD_BIT_RST    5

/* GLCD_DELAY; is macros for                */
/* set default delays in tacts              */
/* in functions GLCD_Draw_...               */
#define GLCD_DELAY 1

/*##############################################################*/
/* end of TUNEABLE part of the library                          */
/*##############################################################*/